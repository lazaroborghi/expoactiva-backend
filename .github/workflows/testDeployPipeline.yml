name: Test CI/CD

on:
  push:
    branches:
      - test

jobs:
  avoid_redundant_builds:
    runs-on: ubuntu-20.04
    steps:
      - name: Cancelar builds redundantes anteriores
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    needs: avoid_redundant_builds
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
    
      - name: Instalar dependencias
        run: bun install

      - name: Correr linter
        run: bun run lint

  test:
    needs: avoid_redundant_builds
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Instalar dependencias
        run: bun install
        
      - name: Correr tests
        run: npm test

  deploy:
    needs: [lint, test]
    runs-on: ubuntu-20.04
    container:
      image: google/cloud-sdk:alpine
    steps:

      - uses: actions/checkout@v3
      - name: Establecer proyecto de Google Cloud
        run: gcloud config set project expoactiva-nacional-395522

      - name: Autenticaci칩n con Google Cloud
        run: |
          echo "$GCP_CREDENTIALS" > key.json
          gcloud auth activate-service-account --key-file=key.json
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

      - name: Obtener versi칩n anterior
        id: last-version
        run: |
          LAST_VERSION=$(gcloud app versions list --sort-by '~version.id' --limit 1 --format 'value(version.id)')
          echo "Last version is $LAST_VERSION"
          echo "LAST_VERSION=$LAST_VERSION" >> $GITHUB_ENV

      - name: Despliegue a Google App Engine
        run: gcloud app deploy

      - name: Obtener nueva versi칩n
        run: |
          NEW_VERSION=$(gcloud app versions list --sort-by '~version.id' --limit 1 --format 'value(version.id)')
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Establecer tr치fico
        run: |
          gcloud app services set-traffic default --splits $LAST_VERSION=0.8,$NEW_VERSION=0.2
